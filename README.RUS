ОПИСАНИЕ ЗАДАНИЯ

Два типа блоков – блок управления и блоки индикации соединены в одноранговую локальную сеть. Все блоки распределены в пространстве и установлены на улице. Блоки объединены локальной сетью Ethernet. Каждый блок индикации имеет 2 датчика: датчик температуры и датчик освещенности. Блок управления может быть в составе сети только в одном экземпляре. Блоки индикации имеются в количестве от 3 до 200. Количество блоков индикации может меняться в процессе работы. До момента подключения к сети блок управления ничего не знает о блоках индикации.

Блок управления в произвольные моменты времени отправляет в блоки индикации данные для отображения, например: текст, температура, время и яркость. Так же, блок управления периодически (1 раз в 5 секунд) опрашивает все датчики с блоков индикации, рассчитывает среднее значение температуры и освещенности. Среднее значение температуры используется для отправки в блоки индикации в виде текста, а среднее значение освещенности используется для подстройки яркости отображаемой информации. Блок управления устанавливает значение яркости во все блоки индикации в соответствии с расчетным средним значением освещенности.

В случае временной потери связи (до 5 минут) блоков индикации с блоком управления, роль блока управления (мастер-контроллера) должен взять один из блоков индикации, до того момента, пока основной блок управления снова станет доступен. Блок индикации, который взял роль мастер-контроллера, так же может потерять связь с блоками индикации, после чего должен выбраться новый мастер-контроллер среди оставшихся блоков индикации. 

Необходимо предложить алгоритм выбора нового мастер-контроллера между блоками индикации при потере соединения с блоком управления (основным блоком управления или блоком индикации, выполняющим функции мастер-контроллера) и программно реализовать эмуляторы блоков управления и индикации в ОС Linux на языке Си (см. оригинальное условие в отдельном файле "Текст задания.txt").


ОБЩЕЕ ОПИСАНИЕ РЕШЕНИЯ

За основу решения взяты свойства протокола Ethernet: общая шина (среда), широковещательные сообщения и уникальность MAC адреса устройства в сети. Это даёт возможность всем блокам "слышать" друг друга и отвечать на сообщения в случае работоспособности устройства. Предлагается проприетарный протокол взаимодействия блоков с уникальным идентификатором Ethernet пакета. Запросы всегда являются "широковещательными", ответы - всегда адресными (передаются на адрес источника запроса). Запрос/ответ сообщение всегда несёт признак устройства отправившего сообщение - это "Блок Управления" или "Блок Индикации" или "Блок Индикации в режиме Мастер".

За нулевое состояние взята "пустая" сеть без включённых устройств (блоков индикации и/или управления). Любое устройство включаемое в сеть, передаёт запрос. Например, блок управления при включении передаёт запрос "Нужен исполнитель", а блок индикации - "Нужен мастер". Алгоритмом предусматривается таймаут ожидания ответа и N повторных попыток отправки запроса. В "пустой" сети, блок не получит ответа, таким образом блок управления останется в режиме "Ожидание исполнителя", в котором ожидается подключение блока исполнителя (то есть запроса "Нужен мастер"). Блок индикации действует аналогично - в случае отсутствия ответа "Я - мастер" (что ожидаемо для "пустой" сети), блок индикации переходит в режим мастер-контроллера и состояние "Ожидания исполнителя". Таким образом при первом подключении любого устройства, сеть получает мастер-контроллер.

Наполнение сети происходит уже контролируемо (в сети есть мастер). Добавление нового блока индикации вызывает ответ "Я - мастер", на запрос "Нужен мастер" и переводит мастер-контроллер в состояние "Мастер" из состояния "Ожидание исполнителя". Получение ответа "Я - мастер", переводит блок исполнителя в состояние "Исполнитель" из состояния "Ожидание мастера". В этом режиме, мастер-контроллер периодически рассылает запрос "Запрос данных с датчиков", блоки индикации возвращают данные с датчиков и т.д. Добавление нового блока управления в сеть вызывает конфликт, который разрешается следующим образом: если текущий мастер-контроллер - это блок индикации в режиме мастер-контроллера (временный мастер), новый блок управления имеет приоритет и перехватывает контроль над сетью; текущий мастер переходит в режим исполнителя. Иначе, если текущий мастер тоже является блоком управления, новый мастер игнорируется сетью (текущим мастером) и выключается из сети.

Исключение (или временная потеря соединения/работоспособности) из сети происходит следующим образом. Исключение блока индикации (если это не последний блок индикации в режиме исполнителя) не вызывает реакции мастера. Удаление последнего исполнителя вызовет переход мастера из состояния "Мастер" в состояние "Ожидание исполнителя". Удаление мастер-контроллера запускает алгоритм выбора нового мастера. Триггером является отсутствие запроса "Запрос данных с датчиков" от мастера в течении определенного интервала времени. Это событие переводит блок индикации из состояния "Исполнитель" в состояние "Ожидание мастера" вместе с отправкой запроса "Нужен мастер". В этом состоянии каждый блок индикации обрабатывает запросы "Нужен мастер" от остальных блоков индикации и сравнивает их MAC адреса со своим. Блок индикации с самым большим адресом получает управление и становится новым мастер-контроллером (подробнее алгоритм описан в файле "Описание алгоритма.txt"). 

Таким образом, наличие хотя бы двух блоков индикации в сети, обеспечивает безальтернативный выбор нового мастера. Потенциально возможный конфликт, вызванный, например, ситуацией включения в сеть нового блока индикации с наибольшим адресом в момент выбора нового мастера, разрешается следующим образом: если новый мастер (с меньшим адресом) уже получил контроль, он остаётся мастером до следующих выборов, иначе конфликт разрешается сравнением адресов.

Дополнительная защита от конфликтных ситуаций обеспечивается сохранением адреса и признака устройства текущего мастер-контроллера исполнителями, что даёт им возможность переключаться на новый блок управления с временного мастер-контроллера, и игнорировать запросы от незарегистрированного мастера.  


КОММЕНТАРИИ К РЕАЛИЗАЦИИ

Преимуществом подхода является минимизация использования системных ресурсов. "Широковещательные" запросы дают возможность не хранить и не обрабатывать списки устройств в сети, позволяют гибко добавлять и удалять устройства. 

Обработка сообщений осуществляется с использованием подхода основанного на автомате состояний - двумерного массива указателей на функции где индексами являются входящее сообщение и текущее состояние устройства. Такой подход позволяет гибко расширять протокол новыми сообщениями и/или новыми состояниями устройства.

Ввиду схожести (хоть и не тождественности) функционирования блока управления и блока индикации в режиме мастера, часть кода совместно используется обоими модулями.

Так как алгоритм привязан к MAC адресу, на одном ethernet интерфейсе ОС Linux может быть запущен только один блок. Реализован контроль подключения модуля, который исключает запуск более чем одного модуля (блока контроля или индикации) в ядре OC.

Модули cb.ko (эмулятор блока управления) и ib.ko (эмулятор блока индикации) принимают 2 параметра:

eth_device_name - имя ethernet интерфейса
debug - режим диагностических сообщений

Рекомендуемый режим запуска БИ в режиме отладки на интерфейсе eth0:
insmod ib.ko debug=15 eth_device_name="eth0"

Эмуляторы представляют собой модули ядра Linux, использующие Ethernet интерфейс OC. Эмуляторы собирались и тестировались на CentOS 8 с ядром (4.18.0-408.el8.x86_64) в сети из трёх виртуальных машин на отработку основных сценариев.

Общее время затраченное на решение задачи составляет примерно 80 рабочих часов.